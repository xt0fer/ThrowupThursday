package com.example.throwupthursday;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.throwupthursday.daos.Person;
import com.example.throwupthursday.PersonRepository;

@Controller    // This means that this class is a Controller
@CrossOrigin // defaults to allow all origins, probs not safe for prod
@RequestMapping(path="/people") // This means URL's start with /people (after Application path)
public class PersonController {

    private PersonRepository personRepository;

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    public PersonController(PersonRepository personRepository) {
        this.personRepository = personRepository;
    }

    @GetMapping(path="/add") // Map ONLY GET Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam Integer age) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Person n = new Person();
        n.setName(name);
        n.setAge(age);
        personRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Person> getAllUsers() {
        // This returns a JSON or XML with the users
        return personRepository.findAll();
    }
}

// $ curl 'localhost:8080/people/add?name=George&age=28'
